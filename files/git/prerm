#!/bin/sh -e
# This script can be called in the following ways:
#
# After the package was removed:
#       <postrm> remove
#
# After the package was purged:
#       <postrm> purge
#
# After the package was upgraded:
#       <old-postrm> upgrade <new-version>
# if that fails:
#       <new-postrm> failed-upgrade <old-version>
#
#
# After all of the packages files have been replaced:
#       <postrm> disappear <overwriting-package> <version>
#
#
# If preinst fails during install:
#       <new-postrm> abort-install
#
# If preinst fails during upgrade of removed package:
#       <new-postrm> abort-install <old-version>
#
# If preinst fails during upgrade:
#       <new-postrm> abort-upgrade <old-version>


case "$1" in

remove)

    ## Make git save credentials by default ------------------------------------

    if [ "$(git config --system --get credential.helper)" = 'store' ]
    then
	    git config --system --unset credential.helper
	fi
	
    ## Set default pull startegy -----------------------------------------------
	
    if [ "$(git config --system --get pull.ff)" = 'only' ]
    then
	    git config --system --unset pull.ff
	fi
	
    ## Set default branch name -------------------------------------------------
	
    if [ "$(git config --system --get init.defaultBranch)" = 'master' ]
    then
	    git config --system --unset init.defaultBranch
	fi
	
    ## Add alias for rebase but keep committer information ---------------------
	
    if [ "$(git config --system --get alias.rebasekeep)" = "-c rebase.instructionFormat='%s%nexec GIT_COMMITTER_NAME=\"%cN\" GIT_COMMITTER_EMAIL=\"%ce\" GIT_COMMITTER_DATE=\"%cd\" git commit --amend --no-edit --date=\"%ad\"' rebase" ]
    then
	    git config --system --unset alias.rebasekeep
	fi
	
;;

esac


exit 0
